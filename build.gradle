plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.liquibase.gradle" version "2.0.4"
}

group = 'ru.kpfu.itis.group907.fayzullin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '15'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.postgresql:postgresql:42.2.19'
    implementation 'org.projectlombok:lombok:1.18.18'
    implementation 'org.webjars:jquery:3.6.0'
    implementation 'org.webjars:bootstrap:4.6.0'
    implementation 'org.webjars:webjars-locator-core:0.46'
    implementation 'javax.mail:javax.mail-api:1.6.2'
    implementation 'org.liquibase:liquibase-core:4.3.1'
    liquibaseRuntime("org.liquibase:liquibase-core:4.3.1")
    liquibaseRuntime("org.postgresql:postgresql:42.2.19")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2:1.4.200'
    testImplementation 'junit:junit:4.12'

    // - JSON Serialization -
    compile 'com.fasterxml.jackson.core:jackson-core'
    compile 'com.fasterxml.jackson.core:jackson-annotations'
    compile 'com.fasterxml.jackson.core:jackson-databind'
}

test {
    useJUnitPlatform()
}

def props = new Properties()
file("src/main/resources/liquibase.properties").withInputStream { props.load(it) }

liquibase {
    activities {
        main {
            changeLogFile props.getProperty("outputChangeLogFile")
            url props.getProperty("url")
            username props.getProperty("username")
            password props.getProperty("password")
            driver props.getProperty("driver")
        }
    }
}

